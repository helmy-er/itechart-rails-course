<html>
<head>
</head>
<body>


<%= include_gon %>
<div id ='insert'></div>
<canvas id="myChart"></canvas>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class="date_block">
  <center>
    от  <input type="date" value="" id="start">
    до  <input type="date" id="end">
    <input type="button" value="подтвердить" onclick="newdate()">
  </center>
</div>
<center>
<%=link_to 'Back' ,people_path ,class:"one"%>
</center>
  <h5>Имена записей </h5>
<div><ul>
  <%for name in @expenses_names %>
    <li><%= name %></li>
    <% end %></ul>
</div>
<h5>Имена категорий расходов </h5>
 <div><ul>
  <%for name in @names[0] %>
    <li><%= name %></li>
  <% end %>
</ul>
</div>
<h5>Имена категорий доходов </h5>
<div>
  <ul>
  <%for name in @names[1] %>
      <li><%= name %></li>
  <% end %>
  </ul>
</div>
<div id="chart_div" style="width: 100%; height: 500px;"></div>
<script>
    data=gon.data_income
    data1=gon.date_expenses
    var now = new Date();
    var firstDay = new Date(now.getFullYear(), now.getMonth(), 1)
    drow(firstDay,now)
    function drow(a,b) {

        labels=date(a,b)
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'доходы',
                    data: setdata(labels),
                    backgroundColor: [
                        'rgba(255, 99, 132, 1)',
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',

                    ],
                    borderWidth: 1
                },{
                    label: 'траты',
                    data: setdata1(labels),
                    backgroundColor: [

                        'rgba(54, 162, 235, 1)'
                    ],
                    borderColor: [
                        'rgba(54, 162, 235, 1)'
                    ],
                    borderWidth: 1
                }]
            },
        });
    }
    // заполняет дату расходов
    function setdata(date) {
        new_data=[]
        for (let days in date) {
            new_data.push(data[date[days]])
        }
        return new_data
    }
    // заполняет дату прибыли
    function setdata1(date) {
        new_data=[]
        for (let days in date) {
            new_data.push(data1[date[days]])
        }
        return new_data
    }
    // рисует график с новой датой
    function newdate(){
        start_date=new Date(document.getElementById('start').value)
        end_date =new Date(document.getElementById('end').value)
        document.getElementById('myChart').remove()
        let div =  document. createElement('canvas')
        div.id='myChart'
        place=document.getElementById('insert')
        place.append(div);
        drow(start_date,end_date)
    }
    // возращает список дат из диапазона
    //
    //
    function date(date,date2){

        set_date=[]
        console.log(date<date2)
        if (date2<date ){
            buf=date2
            date2=date
            date=buf
        }
        while (date < date2) {
            day=date.getDate()
            montn=date.getMonth()+1
            set_date.push(montn+'-'+day)
            date.setDate( date.getDate() + 1 )
        }
        return set_date
    }

</script>

</body>
</html>

